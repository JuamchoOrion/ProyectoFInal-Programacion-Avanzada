##############################################################
# üåê API RESERVAS - STAYNOW
# Archivo unificado con todas las peticiones HTTP
# Autor: Laura Valentina G√≥mez Alzate
##############################################################

### üîë TOKEN DEL USUARIO
@token = eyJhbGciOiJIUzM4NCJ9.eyJuYW1lIjoiV2lsbHkiLCJyb2xlIjoiUk9MRV9HVUVTVCIsImVtYWlsIjoid2lsbHlAZ21haWwuY29tIiwic3ViIjoiMTQ0YjhkN2UtYzQyMi00N2VkLTk0ZTEtZGNlYWI5ODhiZGVhIiwiaWF0IjoxNzYwMTQwOTE5LCJleHAiOjE3NjAxNDQ1MTl9.1QpRI18JK1coIzCLVSuSG3x43XuyF2iPW0dJxozncbWGk3IBAyud2rc0DxLcI6AB

##############################################################
# üè® CREAR RESERVAS (10 ejemplos)
##############################################################

### Reserva 1 - Alojamiento 1
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 1,
  "checkIn": "2025-10-15T14:00:00",
  "checkOut": "2025-10-20T12:00:00",
  "guests": 2
}

### Reserva 2 - Alojamiento 1 (otra fecha)
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 1,
  "checkIn": "2025-11-05T14:00:00",
  "checkOut": "2025-11-10T12:00:00",
  "guests": 3
}

### Reserva 3 - Alojamiento 2
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 2,
  "checkIn": "2025-10-25T15:00:00",
  "checkOut": "2025-10-30T11:00:00",
  "guests": 3
}

### Reserva 4 - Alojamiento 2 (otra fecha)
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 2,
  "checkIn": "2025-12-01T14:00:00",
  "checkOut": "2025-12-10T12:00:00",
  "guests": 2
}

### Reserva 5 - Alojamiento 3
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 3,
  "checkIn": "2025-11-01T13:00:00",
  "checkOut": "2025-11-07T12:00:00",
  "guests": 1
}

### Reserva 6 - Alojamiento 3 (otra fecha)
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 3,
  "checkIn": "2025-12-15T14:00:00",
  "checkOut": "2025-12-25T12:00:00",
  "guests": 2
}

### Reserva 7 - Alojamiento 4
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 4,
  "checkIn": "2025-12-10T16:00:00",
  "checkOut": "2025-12-20T10:00:00",
  "guests": 4
}

### Reserva 8 - Alojamiento 4 (otra fecha)
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 4,
  "checkIn": "2026-01-10T14:00:00",
  "checkOut": "2026-01-18T12:00:00",
  "guests": 2
}

### Reserva 9 - Alojamiento 5
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 5,
  "checkIn": "2026-01-05T14:00:00",
  "checkOut": "2026-01-15T12:00:00",
  "guests": 2
}

### Reserva 10 - Alojamiento 5 (otra fecha)
POST http://localhost:9090/reservations
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "accommodationId": 5,
  "checkIn": "2026-02-01T14:00:00",
  "checkOut": "2026-02-10T12:00:00",
  "guests": 3
}

##############################################################
# üìã CONSULTAR Y FILTRAR RESERVAS
##############################################################

### Obtener todas las reservas del usuario autenticado
GET http://localhost:9090/reservations
Authorization: Bearer {{token}}
Accept: application/json

### Filtrar por estado
GET http://localhost:9090/reservations?status=CONFIRMED
Authorization: Bearer {{token}}
Accept: application/json

### Filtrar por rango de creaci√≥n
GET http://localhost:9090/reservations?from=2025-01-01T00:00:00&to=2025-12-31T23:59:59
Authorization: Bearer {{token}}
Accept: application/json

### Filtrar por fechas de check-in / check-out
GET http://localhost:9090/reservations?checkIn=2025-10-01T14:00:00&checkOut=2025-10-10T12:00:00
Authorization: Bearer {{token}}
Accept: application/json

### Filtrar combinado (estado + fechas)
GET http://localhost:9090/reservations?status=CANCELED&from=2025-01-01T00:00:00&to=2025-12-31T23:59:59
Authorization: Bearer {{token}}
Accept: application/json

### Obtener una reserva espec√≠fica por ID
GET http://localhost:9090/reservations/{{reservationId}}
Authorization: Bearer {{token}}
Accept: application/json

##############################################################
# üîÑ CANCELAR RESERVA Y VERIFICAR L√ìGICA DE 48 HORAS
##############################################################

### Cancelar una reserva (por ID)
PATCH http://localhost:9090/reservations/{{reservationIdToCancel}}/cancel
Authorization: Bearer {{token}}
Accept: application/json

##############################################################
# üß© PRUEBAS DE LA L√ìGICA DE CANCELACI√ìN (48 HORAS)
##############################################################
# 1Ô∏è‚É£ Caso OK ‚Äî cancelar con m√°s de 48h antes del check-in
#    - Crear una reserva con checkIn = ahora + 5 d√≠as
#    - Luego ejecutar PATCH /cancel
#    - Esperado: 200 OK y status = CANCELED
#
# 2Ô∏è‚É£ Caso ERROR ‚Äî cancelar dentro de 48h antes del check-in
#    - Crear una reserva con checkIn = ahora + 24h
#    - PATCH /cancel ‚Üí 400 o 409 (seg√∫n API)
#    - Esperado: mensaje "Cannot cancel reservation within 48 hours"
#
# 3Ô∏è‚É£ Post-condici√≥n
#    - Confirmar con GET /reservations/{{id}} que el estado cambi√≥ o no
#    - Verificar que el alojamiento qued√≥ disponible (si aplica)
##############################################################